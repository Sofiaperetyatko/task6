/* task6.cpp 18. Заполнить квадратную матрицу А(nn). следующим образом: элементы, расположенные на
главной диагонали, принять равными 1; выше главной диагонали — сумме индексов; ниже — их
разности.*/

#include <iostream>

using namespace std;

int main()
{
    setlocale(LC_ALL, "ru"); 
    int q = 1;// инициализация q=1 для того,чтобы цикл while(q) работал
    while (q)// пока q=1, то цикл выполняется
    {
        cout << " Введите 1,чтобы продолжить,0,чтобы выйти" << endl;
        cin >> q;
        if (!q)
        {
            return 0;
        }
        else 0;


        int n;// количество строк и столбцов матрицы
        cout << "Введите n число строк и столбцов в матрице " << endl;
        cin >> n;

        int** a = new int* [n];// создаем динамический двумерный массив
        for (int i = 0; i < n; i++) 
        {
            a[i] = new int[n];
        }
        for (int i = 0; i < n; i++)/* цикл для элементов выше главной диагонали, тут мы считаем
                сумму индексов и присваиваем ее этим элементам*/ 
        {
            for (int j = i; j < n; j++)
            {
                a[i][j] = i + j;
            }
        }
        for (int i = 0; i < n; i++) /* цикл где значениям с главной диагонали, присваивается 1
            главная диагональ где i=j, она равна 1*/
        {
            for (int j = i; j <= i; j++)
            {
                a[i][j] = 1;
            }
        }
       
        for (int i = 0; i < n; i++)/*тут мы считаем разность индексов и присваиваем ее элементам, 
                                   находящимся ниже главной диагонали*/
        {
            for (int j = 0; i > j; j++)

            {

                a[i][j] = i - j;
            }

        }
        for (int i = 0; i < n; i++)//выводим цикл
        {
            for (int j = 0; j < n; j++)
            {
                cout << a[i][j] << "\t";// t-для вывода в столбцы
            }
            cout << endl;// для вывода в строки
        }


        delete[]a;// удаляем массив из оперативной памяти
    }
}
